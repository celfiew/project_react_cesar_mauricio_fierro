{"ast":null,"code":"var _jsxFileName = \"C:\\\\RealPageMine\\\\React\\\\class - project\\\\src\\\\components\\\\Item.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un nÃºmero para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÃ‰TODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sÃ­ mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el mÃ©todos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\nexport default function Item(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: this.props.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n} //en el span solo debe ir el agotado, si es mayor de 0 el stock no deberia ir dentro del span ðŸ‘€\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["Item","props","nombre"],"sources":["C:/RealPageMine/React/class - project/src/components/Item.js"],"sourcesContent":["// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un nÃºmero para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÃ‰TODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sÃ­ mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el mÃ©todos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item(props) {\r\n  return (\r\n    <div className='producto'>\r\n      <h3>{this.props.nombre}</h3>\r\n    </div>\r\n  );\r\n}\r\n//en el span solo debe ir el agotado, si es mayor de 0 el stock no deberia ir dentro del span ðŸ‘€\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,IAAT,CAAcC,KAAd,EAAqB;EAClC,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,uBACE;MAAA,UAAK,KAAKA,KAAL,CAAWC;IAAhB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,C,CACD;;KAPwBF,I"},"metadata":{},"sourceType":"module"}